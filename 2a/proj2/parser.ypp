%{
	#include <stdio.h>
	#include <stdlib.h>
	#include <iostream>
	#define YYDEBUG 1

	int yylex(void);
	void yyerror(const char *);
%}

/* Enables verbose error messages */
%error-verbose

/* WRITE ME: put all your token definitions here*/
/* WRITE ME: put all your type definitions here*/
/* WRITE ME: put all your precedence/associativity rules here*/

/*
NOTE:
digits in upper level
everything exept aritmetic operators will be not be left?

highest presidenve unary?
*/

%left T_plus T_minus
%left T_mult T_div
%%

/* WRITE ME: This is the language from Project 1(Calculator). You need
			 to put the productions for the grammar for the
			 language for this project here*/
			 
List    : List RelExpr ';' {/*Your c code goes here!!!*/}
	    | RelExpr ';'      {/*Your C code goes here!!!*/}
        ;

RelExpr : Expr '<' Expr
        | Expr '>' Expr
	    | Expr '=' Expr
	    | Expr
	    ;

Expr    : Expr '*' Expr
        | Expr '+' Expr 
        | Expr '-' Expr
        | Expr '/' Expr
        | 'n'
        | '(' Expr ')'
        ;
%%



/*You shouldn't have to do anything past this*/

extern int yylineno;

void yyerror(const char *s) {
	fprintf(stderr, "%s at line %d\n", s, yylineno);
	exit(0);
}
